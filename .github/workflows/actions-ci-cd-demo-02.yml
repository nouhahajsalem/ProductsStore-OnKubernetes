name: Build & Deploy to AKS with Terraform [demo]

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: houssemdocker
      IMAGE_NAME: web-app-github
      IMAGE_TAG: $GITHUB_RUN_NUMBER # ${{ github.sha }}
      AKS_RESOURCE_GROUP:  resourcegroup-aks-k8s-github-2020
      AKS_NAME: aks-k8s-github-2020 
      ACR_NAME: acrforaksgithub2020
    
    steps:

    - uses: actions/checkout@v2
  
    - name: Build Docker Image
      run:
        docker build ./MvcApp/ --file ./MvcApp/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER --build-arg=token=ZGEzNTQ5Y2QyNjAx --no-cache
    
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin
        
    - name: Push Image to Docker Hub
      run:
        docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER
        
    - name: Scan Docker Image using Trivy
      continue-on-error: true
      run:
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --severity MEDIUM,HIGH,CRITICAL --ignore-unfixed $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

    - name: Replace tokens
      uses: cschleiden/replace-tokens@v1.0
      with:
        tokenPrefix: __
        tokenSuffix: __
        files: terraform.tfvars
      env:
        AKS_RESOURCE_GROUP: $AKS_RESOURCE_GROUP
        AKS_NAME: $AKS_NAME
        ACR_NAME: $ACR_NAME
        SQL_INSTANCE_NAME: sqlforaks-github-2020
        DB_ADMIN_LOGIN: houssem
        DB_ADMIN_PASSWORD: "@Aa123456"
        STORAGE_NAME: storageforsqlgithub2020
    
    - name: Find and Replace
      uses: shitiomatic/str-replace@master
      with:
        find: "azurerm"
        replace: "local"
        include: "infra/backend.tf"
    
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master  
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: './infra'
        tf_actions_comment: false
       
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: './infra'
        tf_actions_comment: false

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: './infra'
        tf_actions_comment: false

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: './infra'
        tf_actions_comment: false

    - name: 'Terraform Apply'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: './infra'
        tf_actions_comment: false
      
    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: $AKS_NAME
        resource-group: $AKS_RESOURCE_GROUP
        
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          kubernetes/mssql-pv.azure.yaml
          kubernetes/mssql-secret.yaml
          kubernetes/mssql-deployment.yaml
          kubernetes/mvc-deployment.azure.yaml
          kubernetes/mssql-configmap.yaml
    
    - name: Run Kube Advisor to check for Resource Limits
      continue-on-error: true
      run:
        kubectl run --rm -i -t kubeadvisor --image=mcr.microsoft.com/aks/kubeadvisor --restart=Never > PodResourceLimits.txt
